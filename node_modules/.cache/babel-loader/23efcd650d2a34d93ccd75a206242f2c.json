{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _embed = require('@typeform/embed');\n\nvar typeformEmbed = _interopRequireWildcard(_embed);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styleDefault = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden'\n};\n\nvar ReactTypeformEmbed = function (_Component) {\n  _inherits(ReactTypeformEmbed, _Component);\n\n  function ReactTypeformEmbed() {\n    _classCallCheck(this, ReactTypeformEmbed);\n\n    return _possibleConstructorReturn(this, (ReactTypeformEmbed.__proto__ || Object.getPrototypeOf(ReactTypeformEmbed)).apply(this, arguments));\n  }\n\n  _createClass(ReactTypeformEmbed, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          url = _props.url,\n          hideHeaders = _props.hideHeaders,\n          hideFooter = _props.hideFooter,\n          opacity = _props.opacity,\n          buttonText = _props.buttonText,\n          popup = _props.popup,\n          mode = _props.mode,\n          autoOpen = _props.autoOpen,\n          autoClose = _props.autoClose,\n          onSubmit = _props.onSubmit;\n      var options = {\n        hideHeaders: hideHeaders,\n        hideFooter: hideFooter,\n        opacity: opacity,\n        buttonText: buttonText,\n        mode: mode,\n        autoOpen: autoOpen,\n        autoClose: autoClose,\n        onSubmit: onSubmit\n      }; // Popup Mode\n\n      if (popup) {\n        // Load Typeform embed popup\n        this.typeform = typeformEmbed.makePopup(url, options); // Widget Mode (default)\n      } else {\n        var elm = this.typeformElm; // Load Typeform embed widget\n\n        typeformEmbed.makeWidget(elm, url, options);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = Object.assign({}, styleDefault, this.props.style);\n      return _react2.default.createElement('div', {\n        className: 'ReactTypeformEmbed',\n        ref: function ref(tf) {\n          _this2.typeformElm = tf;\n        },\n        style: style\n      });\n    }\n  }]);\n\n  return ReactTypeformEmbed;\n}(_react.Component);\n\nReactTypeformEmbed.propTypes = {\n  style: _propTypes2.default.object,\n  url: _propTypes2.default.string.isRequired,\n  popup: _propTypes2.default.bool,\n  hideHeaders: _propTypes2.default.bool,\n  hideFooter: _propTypes2.default.bool,\n  // Widget options\n  opacity: _propTypes2.default.number,\n  buttonText: _propTypes2.default.string,\n  // Popup options\n  mode: _propTypes2.default.string,\n  autoOpen: _propTypes2.default.bool,\n  autoClose: _propTypes2.default.number,\n  onSubmit: _propTypes2.default.func\n}; // Default values taken from official Typeform docs\n// https://developer.typeform.com/embed/modes/\n\nReactTypeformEmbed.defaultProps = {\n  style: {},\n  popup: false,\n  hideHeaders: false,\n  hideFooter: false,\n  onSubmit: function onSubmit() {},\n  // Widget options\n  opacity: 100,\n  buttonText: 'Start',\n  // Popup options\n  mode: 'popup',\n  // options: \"popup\", \"drawer_left\", \"drawer_right\"\n  autoOpen: false,\n  autoClose: 5\n};\nexports.default = ReactTypeformEmbed;","map":null,"metadata":{},"sourceType":"script"}